/**
 * @Author Jianan Lin (林家南)
 * @param a, b, c - ax^2 + bx + c = 0
 * @param flag - true: provide complex solution; false: only real solution
 * @returns - solution in 2-element array, NaN allowed if flag = false
 * Tips: if b = c = 0, then there is only real solution
 * 
 */



function quadratic_equation(a, b = 0, c = 0, flag = false) {

    if (arguments.length === 0) {
        throw new Error('Exception occurred in quadratic_equation - no argument given');
    }

    if (arguments.length > 4) {
        throw new Error('Exception occurred in quadratic_equation - wrong argument number');
    }

    if (!(typeof a === 'number') || !(typeof b === 'number') || !(typeof c === 'number') || !(typeof flag === 'boolean')) {
        throw new Error('Exception occurred in quadratic_equation - a, b, c, must be numbers and flag must be boolean');
    }

    // bx + c = 0
    if (a === 0) {
        if (b === 0) {
            return [NaN, NaN];
        }
        else {
            return [-b / c, -b / c]
        }
    }

    let delta = b * b - 4 * a * c;

    // if |delta| < 1E-10, we can believe it is 0
    if (delta > 0.0000000001) {
        // remember to use mathjs.sqrt, otherwise sqrt returns matrix
        let diff = mathjs.sqrt(delta);
        return [(-b - diff) / (2 * a), (-b + diff) / (2 * a)]
    }

    else if (delta < -0.0000000001) {
        let diff = mathjs.sqrt(-delta);
        if (flag === true) {
            return [mathjs.complex(-b / (2 * a), -diff / (2 * a)), mathjs.complex(-b / (2 * a), diff / (2 * a))];
        }
        else {
            return [NaN, NaN];
        }
    }

    else {
        return [-b / (2 * a), -b / (2 * a)];
    }
}
