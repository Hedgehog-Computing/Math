//author Jason Reynolds
//wrapper function for factorial of enumber or array, Mat or raw 

*import math: is_number
*import math: ndim


function factorial(input) {

    //doesnt support tensors yet 
    let in_type = (input instanceof Mat || input instanceof Tensor)
    let raw_in = (in_type) ? input.clone() : input;


    if (ndim(input) === 1) {
        if (is_number(input)) {
            return (mathjs.factorial(raw_in));
        }
    }
    if (ndim(input) >= 2) {
        if (input instanceof Mat) {
            raw_in = raw_in.val;
        }
        let result_array = zeros(raw_in.length, raw_in[0].length);
        for (let i = 0; i < raw_in.length; i++) {
            for (let j = 0; j < raw_in[0].length; j++) {
                result_array.val[i][j] = mathjs.factorial(raw_in[i][j]);
            }
        }
        return (result_array);
    }
}
